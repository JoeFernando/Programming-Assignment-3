#check if input state and disease are valid
check_state   <- ifelse(state %in% state_db,1,0)
check_disease <- ifelse(outcome %in% disease,3,0)
if(check_state == 0) {stop("invalid state")}
else if(check_disease == 0) {stop("invalid outcome")}
else
{
#if input is valid then execute the rest of the function
#column number of disease to select
disease_col <- if(outcome == "heart attack") {11}
else if(outcome == "heart failure") {17}
else {23}
#extract the hospital name, state and disease columns only
specific_outcome <- all_outcome[c(2,7,disease_col)]
#Filter out missing values and pick only the hospitals in the state you are interested in
specific_outcome <- filter(specific_outcome, specific_outcome[+c(3)] != "Not Available", specific_outcome[+c(2)] == state)
#specific_outcome <- as.matrix(all_outcome[c(7,disease_col)])
#Sort the dataframe by outcome
specific_outcome <- arrange(specific_outcome, specific_outcome[,3] , specific_outcome[,1])
records <- NROW(specific_outcome)
if(num == "best") {return(specific_outcome[1,1])}
else if(num == "worst") {return(specific_outcome[records,1])}
else if(num > records) {return("NA")}
else {return(specific_outcome[num,1])}
}
}
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
submit()
submit()
submit()
best <- function (state, outcome)
{
library(dplyr)
all_outcome   <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
state_db      <- as.matrix(distinct(select(all_outcome, 7)))
disease       <- c("heart attack", "heart failure", "pneumonia")
#check if input state and disease are valid
check_state   <- ifelse(state %in% state_db, 1, 0)
check_disease <- ifelse(outcome %in% disease,3,0)
if(check_state == 0) {stop("invalid state")}
else if(check_disease == 0) {stop("invalid outcome")}
else
{
#if input is valid then execute the rest of the function
#column number of disease to select
x<-data.frame(Disease = c("heart attack", "heart failure", "pneumonia"), Col_No = c(11,17,23))
vlookup     <- function(val, df, col) {df[df[1] == val, col]}
disease_col <- vlookup(outcome, x, 2)
#  disease_col <- if(outcome == "heart attack")  {11}
#                    else if(outcome == "heart failure") {17}
#                            else {23}
#extract the hospital name, state and disease columns only
specific_outcome    <- all_outcome[c(2,7,disease_col)]
specific_outcome[3] <-as.numberic(specific_outcome[3])
#Filter out missing values and pick only the hospitals in the state you are interested in
specific_outcome <- filter(specific_outcome, specific_outcome[+c(3)] != "Not Available", specific_outcome[+c(2)] == state)
#Sort the dataframe by outcome
specific_outcome  <- arrange(specific_outcome, specific_outcome[,3] , specific_outcome[,1])
}
#Return the hospital name in row 1
return(specific_outcome[1,1])
}
#best("TX", "heart attack")
#best("TX", "heart failure")
#best("MD", "heart attack")
#best("MD", "pneumonia")
#best("BB", "heart attack")
submit
submit()
all_outcome   <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
disease_col <- 23
specific_outcome    <- all_outcome[c(2,7,disease_col)]
specific_outcome[3] <-as.numberic(specific_outcome[3])
specific_outcome3   <- as.numberic(specific_outcome[3])
specific_outcome[3] <- as.numeric(specific_outcome[3])
specific_outcome3   <- as.numeric(specific_outcome[3])
str(specific_outcome)
str(specific_outcome3)
specific_outcome3   <- as.numeric(specific_outcome[,3])
str(specific_outcome3)
specific_outcome    <- cbind(specific_outcome, specific_outcome3)
specific_outcome
str(specific_outcome)
best <- function (state, outcome)
{
library(dplyr)
all_outcome   <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
state_db      <- as.matrix(distinct(select(all_outcome, 7)))
disease       <- c("heart attack", "heart failure", "pneumonia")
#check if input state and disease are valid
check_state   <- ifelse(state %in% state_db, 1, 0)
check_disease <- ifelse(outcome %in% disease,3,0)
if(check_state == 0) {stop("invalid state")}
else if(check_disease == 0) {stop("invalid outcome")}
else
{
#if input is valid then execute the rest of the function
#column number of disease to select
x<-data.frame(Disease = c("heart attack", "heart failure", "pneumonia"), Col_No = c(11,17,23))
vlookup     <- function(val, df, col) {df[df[1] == val, col]}
disease_col <- vlookup(outcome, x, 2)
#  disease_col <- if(outcome == "heart attack")  {11}
#                    else if(outcome == "heart failure") {17}
#                            else {23}
disease_col <- 23
#extract the hospital name, state and disease columns only
specific_outcome    <- all_outcome[c(2,7,disease_col)]
ranking             <- as.numeric(specific_outcome[,3])
specific_outcome    <- cbind(specific_outcome, ranking)
#Filter out missing values and pick only the hospitals in the state you are interested in
specific_outcome <- filter(specific_outcome, specific_outcome[+c(3)] != "Not Available", specific_outcome[+c(2)] == state)
#Sort the dataframe by outcome
specific_outcome  <- arrange(specific_outcome, specific_outcome[,4] , specific_outcome[,1])
}
#Return the hospital name in row 1
return(specific_outcome[1,1])
}
#best("TX", "heart attack")
best("TX", "heart failure")
#best("MD", "heart attack")
#best("MD", "pneumonia")
#best("BB", "heart attack")
submit()
specific_outcome  <- arrange(specific_outcome, specific_outcome[,4] , specific_outcome[,1])
View(specific_outcome)
srt(specific_outcome)
str(specific_outcome)
specific_outcome  <- arrange(specific_outcome, specific_outcome[,4] , specific_outcome[,1])
View(specific_outcome)
best <- function (state, outcome)
{
library(dplyr)
all_outcome   <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
state_db      <- as.matrix(distinct(select(all_outcome, 7)))
disease       <- c("heart attack", "heart failure", "pneumonia")
#check if input state and disease are valid
check_state   <- ifelse(state %in% state_db, 1, 0)
check_disease <- ifelse(outcome %in% disease,3,0)
if(check_state == 0) {stop("invalid state")}
else if(check_disease == 0) {stop("invalid outcome")}
else
{
#if input is valid then execute the rest of the function
#column number of disease to select
x<-data.frame(Disease = c("heart attack", "heart failure", "pneumonia"), Col_No = c(11,17,23))
vlookup     <- function(val, df, col) {df[df[1] == val, col]}
disease_col <- vlookup(outcome, x, 2)
#  disease_col <- if(outcome == "heart attack")  {11}
#                    else if(outcome == "heart failure") {17}
#                            else {23}
disease_col <- 23
#extract the hospital name, state and disease columns only
specific_outcome    <- all_outcome[c(2,7,disease_col)]
ranking             <- as.numeric(specific_outcome[,3])
specific_outcome    <- cbind(specific_outcome, ranking)
#Filter out missing values and pick only the hospitals in the state you are interested in
specific_outcome <- filter(specific_outcome, specific_outcome[+c(3)] != "Not Available", specific_outcome[+c(2)] == state)
#Sort the dataframe by outcome
specific_outcome  <- arrange(specific_outcome, specific_outcome[,4] , specific_outcome[,1])
}
#Return the hospital name in row 1
return(specific_outcome[1,1])
}
#best("TX", "heart attack")
best("TX", "heart failure")
#best("MD", "heart attack")
#best("MD", "pneumonia")
#best("BB", "heart attack")
best <- function (state, outcome)
{
library(dplyr)
all_outcome   <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
state_db      <- as.matrix(distinct(select(all_outcome, 7)))
disease       <- c("heart attack", "heart failure", "pneumonia")
#check if input state and disease are valid
check_state   <- ifelse(state %in% state_db, 1, 0)
check_disease <- ifelse(outcome %in% disease,3,0)
if(check_state == 0) {stop("invalid state")}
else if(check_disease == 0) {stop("invalid outcome")}
else
{
#if input is valid then execute the rest of the function
#column number of disease to select
x<-data.frame(Disease = c("heart attack", "heart failure", "pneumonia"), Col_No = c(11,17,23))
vlookup     <- function(val, df, col) {df[df[1] == val, col]}
disease_col <- vlookup(outcome, x, 2)
#  disease_col <- if(outcome == "heart attack")  {11}
#                    else if(outcome == "heart failure") {17}
#                            else {23}
disease_col <- 23
#extract the hospital name, state and disease columns only
specific_outcome    <- all_outcome[c(2,7,disease_col)]
ranking             <- as.numeric(specific_outcome[,3])
specific_outcome    <- cbind(specific_outcome, ranking)
#Filter out missing values and pick only the hospitals in the state you are interested in
specific_outcome <- filter(specific_outcome, specific_outcome[+c(3)] != "Not Available", specific_outcome[+c(2)] == state)
[print]
#Sort the dataframe by outcome
specific_outcome  <- arrange(specific_outcome, specific_outcome[,4] , specific_outcome[,1])
}
#Return the hospital name in row 1
return(specific_outcome[1,1])
}
#best("TX", "heart attack")
best("TX", "heart failure")
#best("MD", "heart attack")
#best("MD", "pneumonia")
#best("BB", "heart attack")
best <- function (state, outcome)
{
library(dplyr)
all_outcome   <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
state_db      <- as.matrix(distinct(select(all_outcome, 7)))
disease       <- c("heart attack", "heart failure", "pneumonia")
#check if input state and disease are valid
check_state   <- ifelse(state %in% state_db, 1, 0)
check_disease <- ifelse(outcome %in% disease,3,0)
if(check_state == 0) {stop("invalid state")}
else if(check_disease == 0) {stop("invalid outcome")}
else
{
#if input is valid then execute the rest of the function
#column number of disease to select
x<-data.frame(Disease = c("heart attack", "heart failure", "pneumonia"), Col_No = c(11,17,23))
vlookup     <- function(val, df, col) {df[df[1] == val, col]}
disease_col <- vlookup(outcome, x, 2)
#  disease_col <- if(outcome == "heart attack")  {11}
#                    else if(outcome == "heart failure") {17}
#                            else {23}
disease_col <- 23
#extract the hospital name, state and disease columns only
specific_outcome    <- all_outcome[c(2,7,disease_col)]
# ranking             <- as.numeric(specific_outcome[,3])
# specific_outcome    <- cbind(specific_outcome, ranking)
#Filter out missing values and pick only the hospitals in the state you are interested in
specific_outcome <- filter(specific_outcome, specific_outcome[+c(3)] != "Not Available", specific_outcome[+c(2)] == state)
#Sort the dataframe by outcome
specific_outcome  <- arrange(specific_outcome, specific_outcome[,3] , specific_outcome[,1])
}
#Return the hospital name in row 1
return(specific_outcome[1,1])
}
#best("TX", "heart attack")
best("TX", "heart failure")
#best("MD", "heart attack")
#best("MD", "pneumonia")
#best("BB", "heart attack")
best <- function (state, outcome)
{
library(dplyr)
all_outcome   <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
state_db      <- as.matrix(distinct(select(all_outcome, 7)))
disease       <- c("heart attack", "heart failure", "pneumonia")
#check if input state and disease are valid
check_state   <- ifelse(state %in% state_db, 1, 0)
check_disease <- ifelse(outcome %in% disease,3,0)
if(check_state == 0) {stop("invalid state")}
else if(check_disease == 0) {stop("invalid outcome")}
else
{
#if input is valid then execute the rest of the function
#column number of disease to select
x<-data.frame(Disease = c("heart attack", "heart failure", "pneumonia"), Col_No = c(11,17,23))
vlookup     <- function(val, df, col) {df[df[1] == val, col]}
disease_col <- vlookup(outcome, x, 2)
#  disease_col <- if(outcome == "heart attack")  {11}
#                    else if(outcome == "heart failure") {17}
#                            else {23}
disease_col <- 23
#extract the hospital name, state and disease columns only
specific_outcome    <- all_outcome[c(2,7,disease_col)]
ranking             <- as.numeric(specific_outcome[,3])
specific_outcome    <- cbind(specific_outcome, ranking)
#Filter out missing values and pick only the hospitals in the state you are interested in
specific_outcome <- filter(specific_outcome, specific_outcome[+c(3)] != "Not Available", specific_outcome[+c(2)] == state)
#Sort the dataframe by outcome
specific_outcome  <- arrange(specific_outcome, specific_outcome[,4] , specific_outcome[,1])
}
#Return the hospital name in row 1
return(specific_outcome[1,1])
}
#best("TX", "heart attack")
best("TX", "heart failure")
#best("MD", "heart attack")
#best("MD", "pneumonia")
#best("BB", "heart attack")
best("TX", "heart failure")
best <- function (state, outcome)
{
library(dplyr)
all_outcome   <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
state_db      <- as.matrix(distinct(select(all_outcome, 7)))
disease       <- c("heart attack", "heart failure", "pneumonia")
#check if input state and disease are valid
check_state   <- ifelse(state %in% state_db, 1, 0)
check_disease <- ifelse(outcome %in% disease,3,0)
if(check_state == 0) {stop("invalid state")}
else if(check_disease == 0) {stop("invalid outcome")}
else
{
#if input is valid then execute the rest of the function
#column number of disease to select
x<-data.frame(Disease = c("heart attack", "heart failure", "pneumonia"), Col_No = c(11,17,23))
vlookup     <- function(val, df, col) {df[df[1] == val, col]}
disease_col <- vlookup(outcome, x, 2)
#  disease_col <- if(outcome == "heart attack")  {11}
#                    else if(outcome == "heart failure") {17}
#                            else {23}
disease_col <- 23
#extract the hospital name, state and disease columns only
specific_outcome    <- all_outcome[c(2,7,disease_col)]
#Filter out missing values and pick only the hospitals in the state you are interested in
specific_outcome <- filter(specific_outcome, specific_outcome[+c(3)] != "Not Available", specific_outcome[+c(2)] == state)
ranking             <- as.numeric(specific_outcome[,3])
specific_outcome    <- cbind(specific_outcome, ranking)
#Sort the dataframe by outcome
specific_outcome  <- arrange(specific_outcome, specific_outcome[,4] , specific_outcome[,1])
}
#Return the hospital name in row 1
return(specific_outcome[1,1])
}
#best("TX", "heart attack")
best("TX", "heart failure")
#best("MD", "heart attack")
#best("MD", "pneumonia")
#best("BB", "heart attack")
#best("BB", "heart attack")
sybmit()
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
best <- function (state, outcome)
{
library(dplyr)
all_outcome   <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
state_db      <- as.matrix(distinct(select(all_outcome, 7)))
disease       <- c("heart attack", "heart failure", "pneumonia")
#check if input state and disease are valid
check_state   <- ifelse(state %in% state_db, 1, 0)
check_disease <- ifelse(outcome %in% disease,3,0)
if(check_state == 0) {stop("invalid state")}
else if(check_disease == 0) {stop("invalid outcome")}
else
{
#if input is valid then execute the rest of the function
#column number of disease to select
x<-data.frame(Disease = c("heart attack", "heart failure", "pneumonia"), Col_No = c(11,17,23))
vlookup     <- function(val, df, col) {df[df[1] == val, col]}
disease_col <- vlookup(outcome, x, 2)
#  disease_col <- if(outcome == "heart attack")  {11}
#                    else if(outcome == "heart failure") {17}
#                            else {23}
#extract the hospital name, state and disease columns only
specific_outcome    <- all_outcome[c(2,7,disease_col)]
#Filter out missing values and pick only the hospitals in the state you are interested in
specific_outcome <- filter(specific_outcome, specific_outcome[+c(3)] != "Not Available", specific_outcome[+c(2)] == state)
ranking             <- as.numeric(specific_outcome[,3])
specific_outcome    <- cbind(specific_outcome, ranking)
#Sort the dataframe by outcome
specific_outcome  <- arrange(specific_outcome, specific_outcome[,4] , specific_outcome[,1])
}
#Return the hospital name in row 1
return(specific_outcome[1,1])
}
#best("TX", "heart attack")
best("TX", "heart failure")
#best("MD", "heart attack")
#best("MD", "pneumonia")
#best("BB", "heart attack")
submit()
library(dplyr)
all_outcome   <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
state_db      <- as.matrix(distinct(select(all_outcome, 7)))
disease       <- c("heart attack", "heart failure", "pneumonia")
State   <- "NY"
outcome <- "pneumonia"
x<-data.frame(Disease = c("heart attack", "heart failure", "pneumonia"), Col_No = c(11,17,23))
vlookup     <- function(val, df, col) {df[df[1] == val, col]}
disease_col <- vlookup(outcome, x, 2)
specific_outcome    <- all_outcome[c(2,7,disease_col)]
specific_outcome <- filter(specific_outcome, specific_outcome[+c(3)] != "Not Available", specific_outcome[+c(2)] == state)
state   <- "NY"
specific_outcome <- filter(specific_outcome, specific_outcome[+c(3)] != "Not Available", specific_outcome[+c(2)] == state)
ranking             <- as.numeric(specific_outcome[,3])
specific_outcome    <- cbind(specific_outcome, ranking)
specific_outcome  <- arrange(specific_outcome, specific_outcome[,4] , specific_outcome[,1])
View(specific_outcome)
best <- function (state, outcome)
{
library(dplyr)
all_outcome   <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
state_db      <- as.matrix(distinct(select(all_outcome, 7)))
disease       <- c("heart attack", "heart failure", "pneumonia")
#check if input state and disease are valid
check_state   <- ifelse(state %in% state_db, 1, 0)
check_disease <- ifelse(outcome %in% disease,3,0)
if(check_state == 0) {stop("invalid state")}
else if(check_disease == 0) {stop("invalid outcome")}
else
{
#      state   <- "NY"
#       outcome <- "pneumonia"
#if input is valid then execute the rest of the function
#column number of disease to select
x<-data.frame(Disease = c("heart attack", "heart failure", "pneumonia"), Col_No = c(11,17,23))
vlookup     <- function(val, df, col) {df[df[1] == val, col]}
disease_col <- vlookup(outcome, x, 2)
#  disease_col <- if(outcome == "heart attack")  {11}
#                    else if(outcome == "heart failure") {17}
#                            else {23}
#extract the hospital name, state and disease columns only
specific_outcome    <- all_outcome[c(2,7,disease_col)]
#Filter out missing values and pick only the hospitals in the state you are interested in
specific_outcome <- filter(specific_outcome, specific_outcome[+c(3)] != "Not Available", specific_outcome[+c(2)] == state)
ranking             <- as.numeric(specific_outcome[,3])
specific_outcome    <- cbind(specific_outcome, ranking)
#Sort the dataframe by outcome
specific_outcome  <- arrange(specific_outcome, specific_outcome[,4] , specific_outcome[,1])
}
#Return the hospital name in row 1
return(specific_outcome[1,1])
}
#best("TX", "heart attack")
best("TX", "heart failure")
#best("MD", "heart attack")
#best("MD", "pneumonia")
#best("BB", "heart attack")
submit()
submit()
submit()
rankhospital <- function (state, outcome, num = "best")
{
library(dplyr)
all_outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
state_db    <- as.matrix(distinct(select(all_outcome, 7)))
disease     <- c("heart attack", "heart failure", "pneumonia")
#check if input state and disease are valid
check_state   <- ifelse(state %in% state_db,1,0)
check_disease <- ifelse(outcome %in% disease,3,0)
if(check_state == 0) {stop("invalid state")}
else if(check_disease == 0) {stop("invalid outcome")}
else
{
#if input is valid then execute the rest of the function
#column number of disease to select
disease_col <- if(outcome == "heart attack") {11}
else if(outcome == "heart failure") {17}
else {23}
#extract the hospital name, state and disease columns only
specific_outcome <- all_outcome[c(2,7,disease_col)]
#Filter out missing values and pick only the hospitals in the state you are interested in
specific_outcome <- filter(specific_outcome, specific_outcome[+c(3)] != "Not Available", specific_outcome[+c(2)] == state)
ranking             <- as.numeric(specific_outcome[,3])
specific_outcome    <- cbind(specific_outcome, ranking)
#specific_outcome <- as.matrix(all_outcome[c(7,disease_col)])
#Sort the dataframe by outcome
specific_outcome <- arrange(specific_outcome, specific_outcome[,4] , specific_outcome[,1])
records <- NROW(specific_outcome)
if(num == "best") {return(specific_outcome[1,1])}
else if(num == "worst") {return(specific_outcome[records,1])}
else if(num > records) {return("NA")}
else {return(specific_outcome[num,1])}
}
}
rankhospital("TX", "heart failure", 4)
submit()
submit()
submit()
submit()
rankhospital <- function (state, outcome, num = "best")
{
library(dplyr)
all_outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
state_db    <- as.matrix(distinct(select(all_outcome, 7)))
disease     <- c("heart attack", "heart failure", "pneumonia")
#check if input state and disease are valid
check_state   <- ifelse(state %in% state_db,1,0)
check_disease <- ifelse(outcome %in% disease,3,0)
if(check_state == 0) {stop("invalid state")}
else if(check_disease == 0) {stop("invalid outcome")}
else
{
#if input is valid then execute the rest of the function
#column number of disease to select
disease_col <- if(outcome == "heart attack") {11}
else if(outcome == "heart failure") {17}
else {23}
#extract the hospital name, state and disease columns only
specific_outcome <- all_outcome[c(2,7,disease_col)]
#Filter out missing values and pick only the hospitals in the state you are interested in
specific_outcome <- filter(specific_outcome, specific_outcome[+c(3)] != "Not Available", specific_outcome[+c(2)] == state)
ranking             <- as.numeric(specific_outcome[,3])
specific_outcome    <- cbind(specific_outcome, ranking)
#specific_outcome <- as.matrix(all_outcome[c(7,disease_col)])
#Sort the dataframe by outcome
specific_outcome <- arrange(specific_outcome, specific_outcome[,4] , specific_outcome[,1])
counter <- NROW(specific_outcome)
if(num == "best") {return(specific_outcome[1,1])}
else if(num == "worst") {return(specific_outcome[counter,1])}
else if(num > counter) {return("NA")}
else {return(specific_outcome[num,1])}
}
}
rankhospital("TX", "heart failure", 4)
submit()
submit()
submit()
submit()
